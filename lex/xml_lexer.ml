# 1 "xml_lexer.mll"
 
(** Lex2 header section *) 
open Xml_types

# 7 "xml_lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\251\255\252\255\001\000\000\000\254\255\006\000\251\255\
    \252\255\006\000\084\000\000\000\000\000\254\255\000\000\000\000\
    \014\000\001\000\008\000\253\255\202\000\251\255\252\255\253\255\
    \024\001\000\000\001\000\253\255\010\000\175\000\002\000\254\255\
    \176\000\169\000\005\000\254\255\009\000\086\000\167\000\170\000\
    \007\000\255\255\083\000\253\255\038\000\084\000\254\255";
  Lexing.lex_backtrk = 
   "\002\000\255\255\255\255\002\000\000\000\255\255\255\255\255\255\
    \255\255\003\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \001\000\000\000\255\255\255\255\002\000\002\000\000\000\255\255\
    \255\255\255\255\255\255\255\255\001\000\001\000\255\255\255\255\
    \255\255\255\255\000\000\255\255\000\000\000\000\255\255";
  Lexing.lex_default = 
   "\003\000\000\000\000\000\003\000\255\255\000\000\008\000\000\000\
    \000\000\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\021\000\000\000\000\000\000\000\
    \255\255\255\255\027\000\000\000\033\000\032\000\255\255\000\000\
    \032\000\033\000\037\000\000\000\039\000\039\000\039\000\039\000\
    \255\255\000\000\045\000\000\000\255\255\045\000\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\025\000\030\000\030\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \025\000\030\000\030\000\029\000\000\000\000\000\000\000\009\000\
    \028\000\000\000\000\000\000\000\000\000\013\000\000\000\005\000\
    \255\255\031\000\036\000\012\000\000\000\000\000\040\000\000\000\
    \000\000\000\000\000\000\000\000\004\000\255\255\002\000\255\255\
    \010\000\016\000\018\000\014\000\015\000\041\000\255\255\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\011\000\017\000\019\000\046\000\010\000\000\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\038\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\000\000\
    \044\000\255\255\000\000\010\000\000\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\255\255\
    \031\000\031\000\031\000\025\000\040\000\255\255\255\255\038\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\000\000\025\000\255\255\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\255\255\000\000\000\000\024\000\035\000\007\000\023\000\
    \022\000\255\255\255\255\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\000\000\000\000\000\000\
    \000\000\024\000\000\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\000\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\043\000\255\255\000\000\255\255\000\000\
    \000\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\000\000\000\000\000\000\000\000\024\000\
    \000\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\
    \000\000\255\255\255\255\000\000\000\000\000\000\000\000\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\025\000\026\000\030\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \025\000\026\000\030\000\026\000\255\255\255\255\255\255\006\000\
    \026\000\255\255\255\255\255\255\255\255\012\000\255\255\004\000\
    \028\000\028\000\034\000\009\000\255\255\255\255\036\000\255\255\
    \255\255\255\255\255\255\255\255\000\000\003\000\000\000\003\000\
    \006\000\015\000\017\000\011\000\014\000\040\000\028\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\009\000\016\000\018\000\044\000\006\000\255\255\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\010\000\010\000\037\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\255\255\
    \042\000\045\000\255\255\010\000\255\255\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\033\000\
    \033\000\029\000\032\000\020\000\038\000\029\000\032\000\039\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\033\000\255\255\255\255\
    \255\255\255\255\020\000\029\000\032\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\003\000\255\255\255\255\020\000\034\000\006\000\020\000\
    \020\000\036\000\028\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\255\255\255\255\255\255\
    \255\255\020\000\255\255\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\024\000\024\000\255\255\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\042\000\045\000\255\255\037\000\255\255\
    \255\255\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\255\255\255\255\255\255\255\255\024\000\
    \255\255\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\038\000\
    \255\255\033\000\039\000\255\255\255\255\255\255\255\255\029\000\
    \032\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec tokenize lexbuf =
    __ocaml_lex_tokenize_rec lexbuf 0
and __ocaml_lex_tokenize_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 84 "xml_lexer.mll"
               ( tokenize_tag (fun x -> Start_tag x) lexbuf )
# 189 "xml_lexer.ml"

  | 1 ->
# 85 "xml_lexer.mll"
               ( tokenize_tag (fun x -> End_tag x) lexbuf )
# 194 "xml_lexer.ml"

  | 2 ->
# 86 "xml_lexer.mll"
               ( Text (Lexing.lexeme lexbuf) )
# 199 "xml_lexer.ml"

  | 3 ->
# 87 "xml_lexer.mll"
               ( Lexing_error )
# 204 "xml_lexer.ml"

  | 4 ->
# 88 "xml_lexer.mll"
               ( EOF )
# 209 "xml_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_tokenize_rec lexbuf __ocaml_lex_state

and tokenize_tag f lexbuf =
    __ocaml_lex_tokenize_tag_rec f lexbuf 6
and __ocaml_lex_tokenize_tag_rec f lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 91 "xml_lexer.mll"
          ( 
    let name = Lexing.lexeme lexbuf in 
    match tokenize_attributes (None, []) lexbuf with 
    | Attribute_error -> Lexing_error 
    | Attribute_values attributes -> f {name; attributes}
  )
# 226 "xml_lexer.ml"

  | 1 ->
# 97 "xml_lexer.mll"
                           ( 
    match tokenize_comment lexbuf with 
    | Some x -> Comment x 
    | None   -> Lexing_error 
  )
# 235 "xml_lexer.ml"

  | 2 ->
# 102 "xml_lexer.mll"
                         (
    match tokenize_cdata "" lexbuf with 
    | Some x -> CData x 
    | None   -> Lexing_error 
  )
# 244 "xml_lexer.ml"

  | 3 ->
# 108 "xml_lexer.mll"
          ( Lexing_error )
# 249 "xml_lexer.ml"

  | 4 ->
# 109 "xml_lexer.mll"
          ( Lexing_error )
# 254 "xml_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_tokenize_tag_rec f lexbuf __ocaml_lex_state

and tokenize_attributes acc lexbuf =
    __ocaml_lex_tokenize_attributes_rec acc lexbuf 20
and __ocaml_lex_tokenize_attributes_rec acc lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 112 "xml_lexer.mll"
                 ( tokenize_attributes acc lexbuf )
# 266 "xml_lexer.ml"

  | 1 ->
# 113 "xml_lexer.mll"
                 ( 
    let name, attributes  = acc in 
    match name with 
    | Some x -> Attribute_error 
    | None -> 
      let name = Lexing.lexeme lexbuf in 
      tokenize_attributes (Some name, attributes) lexbuf 
  )
# 278 "xml_lexer.ml"

  | 2 ->
# 122 "xml_lexer.mll"
         (
    let name, attributes = acc in 
    match name with 
    | None -> Attribute_error 
    | Some name -> 
      match tokenize_attribute_value lexbuf with 
      | None -> Attribute_error 
      | Some value -> tokenize_attributes (None, (name, value)::attributes) lexbuf 
  )
# 291 "xml_lexer.ml"

  | 3 ->
# 131 "xml_lexer.mll"
        ( Attribute_values (List.rev @@ snd acc))
# 296 "xml_lexer.ml"

  | 4 ->
# 132 "xml_lexer.mll"
              (Attribute_error)
# 301 "xml_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_tokenize_attributes_rec acc lexbuf __ocaml_lex_state

and tokenize_attribute_value lexbuf =
    __ocaml_lex_tokenize_attribute_value_rec lexbuf 26
and __ocaml_lex_tokenize_attribute_value_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 135 "xml_lexer.mll"
                 ( tokenize_attribute_value lexbuf )
# 313 "xml_lexer.ml"

  | 1 ->
# 136 "xml_lexer.mll"
                    ( 
    let s = Lexing.lexeme lexbuf in 
    Some (String.sub s 1 (String.length s - 2))
  )
# 321 "xml_lexer.ml"

  | 2 ->
# 140 "xml_lexer.mll"
             (None)
# 326 "xml_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_tokenize_attribute_value_rec lexbuf __ocaml_lex_state

and tokenize_comment lexbuf =
    __ocaml_lex_tokenize_comment_rec lexbuf 34
and __ocaml_lex_tokenize_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 143 "xml_lexer.mll"
                              ( 
    let s = Lexing.lexeme lexbuf in 
    Some (String.sub s 0 (String.length s - 3))
  )
# 341 "xml_lexer.ml"

  | 1 ->
# 147 "xml_lexer.mll"
             (None)
# 346 "xml_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_tokenize_comment_rec lexbuf __ocaml_lex_state

and tokenize_cdata b lexbuf =
    __ocaml_lex_tokenize_cdata_rec b lexbuf 42
and __ocaml_lex_tokenize_cdata_rec b lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 150 "xml_lexer.mll"
                                       ( 
    tokenize_cdata (b ^ Lexing.lexeme lexbuf)  lexbuf 
    (** TODO.. check is using Buffer would be faster *) 
  )
# 361 "xml_lexer.ml"

  | 1 ->
# 154 "xml_lexer.mll"
              ( 
    Some (String.sub b 0 (String.length b - 1)) 
  )
# 368 "xml_lexer.ml"

  | 2 ->
# 157 "xml_lexer.mll"
            (None)
# 373 "xml_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_tokenize_cdata_rec b lexbuf __ocaml_lex_state

;;

# 159 "xml_lexer.mll"
 
(** Lex2 footer section *)  

# 384 "xml_lexer.ml"
